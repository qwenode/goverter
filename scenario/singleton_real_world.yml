input:
    input.go: "package example\n\n// goverter:converter\ntype UserService interface {\n    CreateUser(source CreateUserRequest) User\n}\n\n// goverter:converter  \ntype OrderConverterImpl interface {\n    ConvertOrder(source OrderDTO) Order\n}\n\ntype CreateUserRequest struct {\n    Name  string\n    Email string\n}\n\ntype User struct {\n    Name  string\n    Email string\n}\n\ntype OrderDTO struct {\n    ID       int\n    UserID   int\n    Amount   float64\n}\n\ntype Order struct {\n    ID       int\n    UserID   int\n    Amount   float64\n}\n"
success:
    - generated/generated.go: |
        // Code generated by github.com/jmattheis/goverter, DO NOT EDIT.

        package generated

        import execution "github.com/jmattheis/goverter/execution"

        type OrderConverterImplImpl struct{}

        var OrderConverterImplConvert = OrderConverterImplImpl{}

        func (c *OrderConverterImplImpl) ConvertOrder(source execution.OrderDTO) execution.Order {
        	var exampleOrder execution.Order
        	exampleOrder.ID = source.ID
        	exampleOrder.UserID = source.UserID
        	exampleOrder.Amount = source.Amount
        	return exampleOrder
        }

        type UserServiceImpl struct{}

        var UserServiceConvert = UserServiceImpl{}

        func (c *UserServiceImpl) CreateUser(source execution.CreateUserRequest) execution.User {
        	var exampleUser execution.User
        	exampleUser.Name = source.Name
        	exampleUser.Email = source.Email
        	return exampleUser
        }
