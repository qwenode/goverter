input:
    input.go: |
        package structs

        import (
            "database/sql"
        )

        // goverter:converter
        type Converter interface {
            ConvertHouse(source Input) Output
        }

        type Input struct {
            House struct {
                Name sql.NullString
            }
        }

        type Output struct {
            House struct {
                Name sql.NullString
            }
        }
success:
    - generated/generated.go: |
        // Code generated by github.com/jmattheis/goverter, DO NOT EDIT.

        package generated

        import (
        	"database/sql"
        	execution "github.com/jmattheis/goverter/execution"
        )

        type ConverterImpl struct{}

        var Converter = ConverterImpl{}

        func (c *ConverterImpl) ConvertHouse(source execution.Input) execution.Output {
        	var structsOutput execution.Output
        	structsOutput.House.Name = c.sqlNullStringToSqlNullString(source.House.Name)
        	return structsOutput
        }
        func (c *ConverterImpl) sqlNullStringToSqlNullString(source sql.NullString) sql.NullString {
        	var sqlNullString sql.NullString
        	sqlNullString.String = source.String
        	sqlNullString.Valid = source.Valid
        	return sqlNullString
        }
