input:
    input.go: |
        package structs

        // goverter:converter
        type Converter interface {
            // goverter:update target
            Convert(source Input, target *Output)
        }

        type Input struct {
            A *string
        }
        type Output struct {
            A *string
        }
success:
    - generated/generated.go: |
        // Code generated by github.com/jmattheis/goverter, DO NOT EDIT.

        package generated

        import execution "github.com/jmattheis/goverter/execution"

        type ConverterImpl struct{}

        var Converter = ConverterImpl{}

        func (c *ConverterImpl) Convert(source execution.Input, target *execution.Output) {
        	if source.A != nil {
        		xstring := *source.A
        		target.A = &xstring
        	}
        }
