input:
    input.go: |
        package example

        import (
            input "github.com/jmattheis/goverter/execution/input"
            output "github.com/jmattheis/goverter/execution/output"
        )

        // goverter:converter
        // goverter:enum:unknown @panic
        type Converter interface {
            // goverter:enum:transform regex Color(\w+) Col$1
            Convert(input.Color) output.Color
            // goverter:enum:transform regex Col(\w+) Color$1
            Convert2(output.Color) input.Color
        }
    input/enum.go: |
        package input

        type Color int

        const (
            ColorGreen Color = iota
            ColorBlue
            ColorRed
        )
    output/enum.go: |
        package output

        type Color string
        const (
            ColGreen Color = "green"
            ColBlue  Color = "blue"
            ColRed   Color = "red"
        )
success:
    - generated/generated.go: |
        // Code generated by github.com/jmattheis/goverter, DO NOT EDIT.

        package generated

        import (
        	"fmt"
        	input "github.com/jmattheis/goverter/execution/input"
        	output "github.com/jmattheis/goverter/execution/output"
        )

        type ConverterImpl struct{}

        var Converter = ConverterImpl{}

        func (c *ConverterImpl) Convert(source input.Color) output.Color {
        	var outputColor output.Color
        	switch source {
        	case input.ColorBlue:
        		outputColor = output.ColBlue
        	case input.ColorGreen:
        		outputColor = output.ColGreen
        	case input.ColorRed:
        		outputColor = output.ColRed
        	default:
        		panic(fmt.Sprintf("unexpected enum element: %v", source))
        	}
        	return outputColor
        }
        func (c *ConverterImpl) Convert2(source output.Color) input.Color {
        	var inputColor input.Color
        	switch source {
        	case output.ColBlue:
        		inputColor = input.ColorBlue
        	case output.ColGreen:
        		inputColor = input.ColorGreen
        	case output.ColRed:
        		inputColor = input.ColorRed
        	default:
        		panic(fmt.Sprintf("unexpected enum element: %v", source))
        	}
        	return inputColor
        }
