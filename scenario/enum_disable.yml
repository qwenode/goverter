input:
    input.go: |
        package example

        import (
            input "github.com/jmattheis/goverter/execution/input"
            output "github.com/jmattheis/goverter/execution/output"
        )

        // goverter:converter
        // goverter:enum:unknown @panic
        // goverter:enum no
        type Converter interface {
            Convert(input.Color) output.Color
        }
    input/enum.go: |
        package input

        type Color string

        const (
            Green Color = "green"
            Blue  Color = "blue"
            Red   Color = "red"
        )
    output/enum.go: |
        package output

        type Color string
        const (
            Green Color = "green"
            Blue  Color = "blue"
            Red   Color = "red"
        )
success:
    - generated/generated.go: |
        // Code generated by github.com/jmattheis/goverter, DO NOT EDIT.

        package generated

        import (
        	input "github.com/jmattheis/goverter/execution/input"
        	output "github.com/jmattheis/goverter/execution/output"
        )

        type ConverterImpl struct{}

        var Converter = ConverterImpl{}

        func (c *ConverterImpl) Convert(source input.Color) output.Color {
        	return output.Color(source)
        }
