input:
    input.go: |
        package structs

        // goverter:converter
        // goverter:output:raw func hello() {
        // goverter:output:raw     println("hello world")
        // goverter:output:raw }
        type Converter interface {
            Convert(source Input) Output
        }

        type Input struct { Name string }
        type Output struct { Name string }
success:
    - generated/generated.go: |
        // Code generated by github.com/jmattheis/goverter, DO NOT EDIT.

        package generated

        import execution "github.com/jmattheis/goverter/execution"

        func hello() {
        	println("hello world")
        }

        type ConverterImpl struct{}

        var Converter = ConverterImpl{}

        func (c *ConverterImpl) Convert(source execution.Input) execution.Output {
        	var structsOutput execution.Output
        	structsOutput.Name = source.Name
        	return structsOutput
        }
